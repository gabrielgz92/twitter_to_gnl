exit
fields.values
fields
long_tweet.to_array.slice
long_tweet.to_a.slice
fields.values
tweet_gnl
fields.class
fields
field
exit
client.status(t.id, tweet_mode: "extended")
client.status(tweet_mode: "extended")
t
tweets
exit
long_tweet
fields
long_tweet
tweets.first.text
tweets.first.id
tweets.first
tweets
exit
test = long_tweet.to_hash.slice(:created_at, :full_text, :id)
c
  fields = long_tweet.to_hash.slice(:created_at, :full_text)
long_tweet.to_hash.slice
long_tweet.to_hash
long_tweet
end
  puts tweet.text
).each do |tweet|
  since: "2019-01-01"
  result_type: "recent",
  "to:justinbieber marry me",
client.search(
exit
client.search("from:realDonaldTrump since:2019-01-01 until:2019-06-13").take(5)
client.search("realDonaldTrump").take(3)
client.search("realDonaldTrump", since: "2019-01-01", until: "2019-06-13").take(3)
a.class
a
exit
  "#{tweet.user.screen_name}: #{tweet.text}"
client.search("to:justinbieber marry me", result_type: "recent").take(3).collect do |tweet|
tester.collect
tester.take(1)
tester.first
tester
client.search("BarackObama").count
client.search("BarackObama").take(1).first.created_at
client.search("BarackObama").take(1).first.full_text
client.search("BarackObama").take(1).first
client.search("BarackObama").take(1).text
client.search("BarackObama").take(1).full_text
client.search("BarackObama").take(1)
client.search("to:justinbieber")
client.search("to:justinbieber marry me", result_type: "recent").take(3)
client
tester.class
tester
exit
old_tweets.count
old_tweets.each { |t| p t.inspect }
old_tweets.client
old_tweets.inspect
old_tweets.class
old_tweets.request
hash.user
hash.last
hash.second
hash.first
hash = old_tweets.to_hash
old_tweets.to_hash
old_tweets.each {|o| p "LALALALLALALALA.#{o}"}
old_tweets.each {|o| p "1.#{o}"}
old_tweets.each {|o| p "1.#{o}}
old_tweets.each {|o| p o}
old_tweets.first
old_tweets.map
old_tweets.map.first
old_tweets.flat_map.first
old_tweets.flat_map
old_tweets.flat_pmap
old_tweets
exit
old_tweets.tweet
old_tweets.tweets
old_tweets.first
old_tweets.class
old_tweets.clas
old_tweets
c
client.eachc
client.each
client.split
client.class
client
tweets.class
tweets
exit
results
exit
tweet_gnl
tweet_gn
tweet_gnl[0] = Time.parse(tweet_gnl[0]).strftime("%F %T")
tweet_gnl[0] = Time.parse(tweet_gnl[0]).stfrtime("%F %T")
tweet_gnl[0]
tweet_gnl
exit
results
exit
results
exit
Time.parse(fields.values.first).strftime("%F %T")
Time.parse(fields.values.first)
fields.values.first
fields
date.strftime("%F %T")
date
parsed_date.strftime("%F %T")
Time.now.strftime("%F %T")
parsed_date.month
parsed_date.day
parsed_date = DateTime.parse(date)
DateTime.parse(date)
date = results.first.first
exit
c
require 'date'
results.first.first.class
results.first.first
results
c
long_tweet.full_text
long_tweet.user.name
long_tweet.user
long_tweet
long_tweet.name
long_tweet.to_hash.slice(:created_at, :user).slice(:created_at, :name)
long_tweet.to_hash.slice(:created_at, :user).slice(:created_at)
long_tweet.to_hash.slice(:created_at, :user{:name})
long_tweet.to_hash.slice(:created_at, :user(:name))
long_tweet.to_hash.slice(:created_at, :user)
long_tweet.to_hash.slice(:created_at)
long_tweet.to_hash.slice
long_tweet.to_hash
long_tweet
c
long_tweet.user.name
long_tweet.name
long_tweet.to_h
long_tweet.full_text
long_tweet.created_at
long_tweet
fields
c
cc
c
ccccccc
c
cc
c
fields.values.first
fields.values
fields.value
fields
c
long_tweet.full_text
long_tweet
c
tweets.first.id
tweets.first
c
fields.second
fields.first
fields.class
fields[0]
fields.text
fields
c
tweets.first
tweets.first.hashtags.second.text
tweets.first.hashtags.first.text
tweets.first.hashtags.first
tweets.first.hashtags.text
tweets.first.hashtags.full_text
tweets.first.hashtags
tweets.first.created_at
tweets.first.entity
tweets.first.entities
tweets.first.entities?
tweets.first.source
tweets.first.favorite_count
tweets.first.lang
tweets.first.full_text
tweets.first.text
tweets.first.date
tweets.first
